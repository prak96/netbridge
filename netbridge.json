{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "projectName": {
            "type": "string",
            "metadata": {
                "description": "Project Name"
            }
        },
        "count": {
            "type": "int",
            "metadata": {
                "description": "number of VMs"
            }
        },

        "storageName": {
            "type": "string",
            "minLength": 5,
            "maxLength": 15,
            "metadata": {
                "description": "Azure Storage Name"
            }
        },
        "skuTypes": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_ZRS",
                "Standard_GRS",
                "Premium_LRS",
                "Premium_GRS"
            ],
            "metadata": {
                "description": "sku of Azure Storage"
            }
        },

        "vmUsername": {
            "type": "string",
            "metadata": {
                "description": "username of VM"
            }
        },
        "vmPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password of VM"
            }
        },
        "vmOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "allowedValues": [
                "WindowsServer",
                "UbuntuServer",
                "CentOS",
                "Debian",
                "CoreOS",
                "RHEL"
            ],
            "metadata": {
                "description": "OS of VM"
            }
        },
        "vmPublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "allowedValues": [
                "MicrosoftWindowsServer",
                "Canonical",
                "RedHat",
                "Debian",
                "CoreOS",
                "SUSE"
            ],
            "metadata": {
                "description": "Publisher of VM"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "allowedValues": [
                "Standard_B1s",
                "Standard_B2s",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2"
           ],
           "metadata": {
                "description": "size of VM"
            }
        },
        "vmSku": {
            "type": "string",
            "defaultValue": "2022-datacenter-azure-edition",
            "allowedValues": [
                "2016-datacenter-gensecond",
                "2016-datacenter-server-core-g2",
                "2016-datacenter-server-core-smalldisk-g2",
                "2016-datacenter-smalldisk-g2",
                "2016-datacenter-with-containers-g2",
                "2016-datacenter-zhcn-g2",
                "2019-datacenter-core-g2",
                "2019-datacenter-core-smalldisk-g2",
                "2019-datacenter-core-with-containers-g2",
                "2019-datacenter-core-with-containers-smalldisk-g2",
                "2019-datacenter-gensecond",
                "2019-datacenter-smalldisk-g2",
                "2019-datacenter-with-containers-g2",
                "2019-datacenter-with-containers-smalldisk-g2",
                "2019-datacenter-zhcn-g2",
                "2022-datacenter-azure-edition",
                "2022-datacenter-azure-edition-core",
                "2022-datacenter-azure-edition-core-smalldisk",
                "2022-datacenter-azure-edition-smalldisk",
                "2022-datacenter-core-g2",
                "2022-datacenter-core-smalldisk-g2",
                "2022-datacenter-g2",
                "2022-datacenter-smalldisk-g2"
            ],
            "metadata": {
                "description": "sku of VM"
            }
        },
        "emailAlert": {
            "type": "string",
            "metadata": {
                "description": "email id for metric alert"
            }
        }
        
        
        
    },
    "variables": {
        "storageUniquename": "[concat(parameters('storageName'),uniqueString(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "vnetN": "[format('{0}-vnet', parameters('projectName'))]",
        "vnetN2": "[format('{0}-network-vnet',parameters('projectName'))]",
        "nsgN": "[format('{0}webNSG', parameters('projectName'))]",
        "nsgN2": "[format('{0}NSG', parameters('projectName'))]",
        "publicipN": "[format('{0}Publicip',parameters('projectName'))]",
        //"publicipN2": "[format('{0}-ip',variables('bastionName'))]",
        "LoadBalancerN": "[format('{0}LB',parameters('projectName'))]",
        "logAnalyticsWorkspaceName": "[concat('laworkspace', uniqueString(resourceGroup().id))]",
        "nicN":"[format('{0}webNic',parameters('projectName'))]",
        "nicN2":"[format('{0}adminNic',parameters('projectName'))]",
        "nicN3":"[format('{0}dbNic',parameters('projectName'))]",
        "actionGroupName": "[concat('{0}AG-',parameters('projectName'),uniqueString(resourceGroup().id))]",
        "alertRuleName": "[concat('AR1-',uniqueString(resourceGroup().id))]"
        //"bastionName": "[format('{0}-bastion',parameters('projectName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageUniquename')]",
            "location": "[variables('location')]",
            "apiVersion": "2023-01-01",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('skuTypes')]"
            }
           
            
        },
        {
            "type": "Microsoft.Network/virtualnetworks",
            "apiVersion": "2023-04-01",
            "name": "[variables('vnetN')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [

                      {
                        "name":"webappsubnet",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgN'))]"
                            }
                        }
                        
                      },
                    
                     {
                        "name": "databasesubnet",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgN2'))]"
                            }
                        }
                      },
                      {
                        "name": "adminsubnet",
                        "properties": {
                            "addressPrefix": "10.0.3.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgN2'))]"
                            }
                        }
                      }
                ]


            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgN'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgN2'))]",
                "[resourceId('Microsoft.Network/virtualnetworks', variables('vnetN2'))]"
            ]
            
        },

        {
            "type": "Microsoft.Network/virtualnetworks",
            "apiVersion": "2023-04-01",
            "location": "[variables('location')]",
            "name": "[variables('vnetN2')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "192.168.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "192.168.1.0/27"
                        }
                     }
                ]
                
            }
        },
        
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-04-01",
            "name":"[variables('publicipN')]",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            },
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            }
            

        },
        // {
        //     "type": "Microsoft.Network/publicIPAddresses",
        //     "apiVersion": "2023-04-01",
        //     "name": "[variables('publicipN2')]",
        //     "location": "[variables('location')]",
        //     "sku": {
        //         "name": "Standard",
        //         "tier": "Regional"
        //     },
        //     "properties": {
        //         "publicIPAllocationMethod": "Static"
        //     }
        // },

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "name": "[variables('nsgN')]",
            "location":"[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "priority": 100,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "destinationAddressPrefix": "*"
                        }
                     },
                     {
                        "name": "allow-https",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "priority": 108,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*"
                        }
                     },
                     {
                        "name": "allow-rdp",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "priority": 115,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "3389",
                            "destinationAddressPrefix": "*"
                        }
                     },
                     {
                        "name": "allow-ssh",
                        "properties": {
                            "access": "Allow",
                            "protocol": "Tcp",
                            "direction": "Inbound",
                            "priority": 200,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "destinationAddressPrefix": "*"
                        }
                     }
                ]
            }
        },

        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-04-01",
            "name": "[variables('nsgN2')]",
            "location":"[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "allow-http",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "priority": 100,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "destinationAddressPrefix": "*"
                        }
                     },
                     {
                        "name": "allow-https",
                        "properties": {
                            "access": "Allow",
                            "direction": "Inbound",
                            "protocol": "Tcp",
                            "priority": 108,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "443",
                            "destinationAddressPrefix": "*"
                        }
                     },
                     {
                        "name": "allow-ssh",
                        "properties": {
                            "access": "Allow",
                            "protocol": "Tcp",
                            "direction": "Inbound",
                            "priority": 200,
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationPortRange": "22",
                            "destinationAddressPrefix": "*"
                        }
                     }
                ]
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2023-04-01",
            "name": "[variables('LoadBalancerN')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "frontendIP",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicipN'))]"
            
                            }
                            
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "LB-Pools"
                
                    }
                ],
                "probes": [
                    {
                        "name": "LB-probe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 80,
                            "numberOfProbes": 5,
                            "intervalInSeconds": 10
                        }
                     }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LB-inboundRule",
                        "properties": {
                            "protocol": "Tcp",
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes',variables('LoadBalancerN'),'LB-probe')]"
                            },
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('LoadBalancerN'),'LB-Pools')]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('LoadBalancerN'),'frontendIP')]"
                            },
                            "frontendPort": 80,
                            "backendPort": 80,
                            "idleTimeoutInMinutes": 10,
                            "loadDistribution": "Default",
                            "enableTcpReset": false,
                            "enableFloatingIP": false

                        }
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "LB-rdpRule",
                        "properties": {
                            "protocol": "Tcp",
                            "frontendPortRangeStart": 1000,
                            "frontendPortRangeEnd": 3000,
                            "backendPort": 3389,
                            "backendAddressPool": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('LoadBalancerN'),'LB-Pools')]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations',variables('LoadBalancerN'),'frontendIP')]"
                            }
                        }
                     }
                ]


            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicipN'))]"
            ]
        },
        // {
        //     "type": "Microsoft.Network/bastionHosts",
        //     "apiVersion": "2023-04-01",
        //     "name": "[variables('bastionName')]",
        //     "location": "[variables('location')]",
        //     "sku": {
        //         "name": "Standard"
        //     },
        //     "properties": {
        //         "ipConfigurations": [
        //             {
        //                 "name": "bastionHostIpConfig",
        //                 "properties": {
        //                     "publicIPAddress": {
        //                         "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicipN2'))]"
        //                     },
        //                     "subnet": {
        //                         "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetN2'),'AzureBastionSubnet')]"
        //                     }
        //                 }
        //              }
        //         ]
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicipN2'))]",
        //         "[resourceId('Microsoft.Network/virtualnetworks', variables('vnetN2'))]"
        //     ]
        // },


        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "name": "[concat(variables('nicN'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties":{
                            "subnet":{
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetN'),'webappsubnet')]"
                            },
                            "loadBalancerBackendAddressPools":
                            [
                                {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('LoadBalancerN'),'LB-Pools')]"
                                }
                            ],
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers',variables('LoadBalancerN'))]",
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetN'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "name": "[concat(variables('nicN2'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop2",
                "count": "[parameters('count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties":{
                            "subnet":{
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetN'),'adminsubnet')]"
                            },
                            "loadBalancerBackendAddressPools":
                            [
                                {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('LoadBalancerN'),'LB-Pools')]"
                                }
                            ],
                            "privateIPAllocationMethod": "Dynamic"

                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetN'))]"
            ]
        },
        {
            
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-04-01",
            "name": "[concat(variables('nicN3'),copyIndex())]",
            "location": "[variables('location')]",
            "copy": {
                "name": "nicLoop3",
                "count": "[parameters('count')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties":{
                            "subnet":{
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('vnetN'),'databasesubnet')]"
                            },
                            "loadBalancerBackendAddressPools":
                            [
                                {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools',variables('LoadBalancerN'),'LB-Pools')]"
                                }
                            ],
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetN'))]"
            ]
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "location":"[variables('location')]",
            "name": "[concat(format('webvm'),copyIndex())]",
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('count')]"
            },
            
            "properties": {
                "osProfile": {
                    "computerName": "[concat(format('webvm'),copyIndex())]",
                    "adminUsername": "[parameters('vmUsername')]",
                    "adminPassword": "[parameters('vmPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[parameters('vmOffer')]",
                        "publisher": "[parameters('vmPublisher')]",
                        "sku": "[parameters('vmSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "securityProfile": {
                    "securityType": "TrustedLaunch",
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicN'),copyIndex()))]"
                         }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                
                }
                
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicN'),copyIndex()))]"

            ]
           
        },

        {
            
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "location":"[variables('location')]",
            "name": "[concat(format('adminvm'),copyIndex())]",
            "copy": {
                "name": "vmLoop2",
                "count": "[parameters('count')]"
            },
            
            "properties": {
                "osProfile": {
                    "computerName": "[concat(format('adminvm'),copyIndex())]",
                    "adminUsername": "[parameters('vmUsername')]",
                    "adminPassword": "[parameters('vmPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[parameters('vmOffer')]",
                        "publisher": "[parameters('vmPublisher')]",
                        "sku": "[parameters('vmSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "securityProfile": {
                    "securityType": "TrustedLaunch",
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicN2'),copyIndex()))]"
                         }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                
                }
                
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicN2'),copyIndex()))]"

            ]
        },

        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-03-01",
            "location":"[variables('location')]",
            "name": "[concat(format('dbvm'),copyIndex())]",
            "copy": {
                "name": "vmLoop3",
                "count": "[parameters('count')]"
            },
            
            "properties": {
                "osProfile": {
                    "computerName": "[concat(format('dbvm'),copyIndex())]",
                    "adminUsername": "[parameters('vmUsername')]",
                    "adminPassword": "[parameters('vmPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true
                    }
                },
                "storageProfile": {
                    "imageReference": {
                        "offer": "[parameters('vmOffer')]",
                        "publisher": "[parameters('vmPublisher')]",
                        "sku": "[parameters('vmSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "securityProfile": {
                    "securityType": "TrustedLaunch",
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicN3'),copyIndex()))]"
                         }
                    ]
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                
                }
                
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicN3'),copyIndex()))]"

            ]
        },

        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[variables('logAnalyticsWorkspaceName')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                }
            }

        },

        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2023-01-01",
            "name": "[variables('actionGroupName')]",
            "location": "global",
            "properties": {
                "groupShortName": "agshort",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "alert-mail",
                        "emailAddress": "[parameters('emailAlert')]"
                     }
                ]
            }

        },

        {
            "type": "Microsoft.Insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "[variables('alertRuleName')]",
            "location": "global",
            "properties": {
                "description": "alert for unusual activities & performance",
                "enabled": true,
                "severity": 2,
                "scopes": [
                    "[concat(resourceId('Microsoft.Compute/virtualMachines',concat(format('webvm'),1)))]"
                ],
                "evaluationFrequency": "PT5M",
                "windowSize":"PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "metricName": "Percentage CPU",
                            "metricNamespace": "microsoft.compute/virtualmachines",
                            "name": "Metric1",
                            "operator": "GreaterThan",
                            "threshold": 50,
                            "timeAggregation": "Count",
                            "failingPeriods": 5,
                            "criterionType": "StaticThresholdCriterion",
                            "alertSensitivity": "Medium"
                         }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.MultipleResourceMultipleMetricCriteria",
                    "componentId": "[resourceId('Microsoft.OperationalInsights/workspaces',variables('logAnalyticsWorkspaceName'))]"

                },
                "autoMitigate": false,
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups',variables('actionGroupName'))]"
                     }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "[concat(resourceId('Microsoft.Compute/virtualMachines',concat(format('webvm'),1)))]"
            ]
         }


    ],
    "outputs": {}
}